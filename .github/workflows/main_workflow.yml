name: main_release
env:
  docker_username: ${{ secrets.DOCKER_USERNAME }}
  docker_password: ${{ secrets.DOCKER_PASSWORD }}
  GIT_COMMIT: ${{ github.sha }}
  branch: 'main'
on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'
jobs:
  Clone_repo:
    name: Clone repo and create artifact
    runs-on: ubuntu-latest
    steps:
      - name: Download and clone repo
        uses: actions/checkout@v2
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: code
          path: .
  Build:
    needs: Clone_repo
    name: Install Go language and dependecies & build
    runs-on: ubuntu-latest
    steps:
      - name: Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: code
          path: .
      - name: Setup Go for project
        uses: actions/setup-go@v2
        with:
          go-version: '1.19.0'
      - name: Install dependencies for backend
        working-directory: ./backend
        run: |
          go version
          go get -u golang.org/x/lint/golint
      - name: Install dependencies for frontend
        working-directory: ./frontend
        run: |
          go version
          go get -u golang.org/x/lint/golint
      - name: Build backend
        working-directory: ./backend
        run: go build
      - name: Build frontend
        working-directory: ./frontend
        run: go build
      - name: Update a Build Artifact
        uses: actions/upload-artifact@v2
        with: 
          name: code
          path: .
  Auto_test:
    needs: Build
    name: Run automatic test for frontend
    runs-on: ubuntu-latest
    steps: 
      - name: Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: code
          path: .
      - name: Test frontend build
        working-directory: ./frontend
        run: go test
      - name: Update a Build Artifact
        uses: actions/upload-artifact@v2
        with: 
          name: code
          path: .
  Docker-image:
    needs: [Build,Auto_test]
    name: Create Docker image and push it to DockerHub
    runs-on: ubuntu-latest
    steps:
      - name: Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: code
          path: .
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ env.docker_username }}
          password: ${{ env.docker_password }}
      - name: Build and push backend Dockerfile
        uses: docker/build-push-action@v3
        with:
          context: ./backend
          push: true
          tags: ${{ env.docker_username }}/simple-fortune-cookie_go-backend_${{ env.branch }}:latest-${{ env.GIT_COMMIT }}
      - name: Build and push frontend Dockerfile
        uses: docker/build-push-action@v3
        with:
          context: ./frontend
          push: true
          tags: ${{ env.docker_username }}/simple-fortune-cookie_go-frontend_${{ env.branch }}:latest-${{ env.GIT_COMMIT }}
  Run_app:
    needs: Docker-image
    name: Deploy application on GitHub server
    runs-on: self-hosted
    steps:
      - name: Run startup script
        run: |
        chmod +x /home/ubuntu/simple-fortune-cookie/app_start.sh
        run /home/ubuntu/simple-fortune-cookie/app_start.sh ${{ env.branch }}